/* DO NOT EDIT THIS FILE - it is machine generated */
#include "jni.h"
/* Header for class domain_engine_quantum_maps_NativeArrayMap */

#ifndef _Included_domain_engine_quantum_maps_NativeArrayMap
#define _Included_domain_engine_quantum_maps_NativeArrayMap
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     domain_engine_quantum_maps_NativeArrayMap
 * Method:    init
 * Signature: ()V
 */
JNIEXPORT jlong JNICALL Java_domain_engine_quantum_maps_NativeArrayMap_init
  (JNIEnv *, jobject);

/*
 * Class:     domain_engine_quantum_maps_NativeArrayMap
 * Method:    _clear
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_domain_engine_quantum_maps_NativeArrayMap__1clear
  (JNIEnv *, jobject, jlong);

/*
 * Class:     domain_engine_quantum_maps_NativeArrayMap
 * Method:    _containsKey
 * Signature: (JLjava/lang/Object;)Z
 */
JNIEXPORT jboolean JNICALL Java_domain_engine_quantum_maps_NativeArrayMap__1containsKey
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     domain_engine_quantum_maps_NativeArrayMap
 * Method:    _containsValue
 * Signature: (JLjava/lang/Object;)Z
 */
JNIEXPORT jboolean JNICALL Java_domain_engine_quantum_maps_NativeArrayMap__1containsValue
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     domain_engine_quantum_maps_NativeArrayMap
 * Method:    _entrySet
 * Signature: (J)Ljava/util/Set;
 */
JNIEXPORT jobject JNICALL Java_domain_engine_quantum_maps_NativeArrayMap__1entrySet
  (JNIEnv *, jobject, jlong);

/*
 * Class:     domain_engine_quantum_maps_NativeArrayMap
 * Method:    _get
 * Signature: (JLjava/lang/Object;)Ldomain/engine/math/Complex;
 */
JNIEXPORT jobject JNICALL Java_domain_engine_quantum_maps_NativeArrayMap__1get
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     domain_engine_quantum_maps_NativeArrayMap
 * Method:    _isEmpty
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_domain_engine_quantum_maps_NativeArrayMap__1isEmpty
  (JNIEnv *, jobject, jlong);

/*
 * Class:     domain_engine_quantum_maps_NativeArrayMap
 * Method:    _keySet
 * Signature: (J)Ljava/util/Set;
 */
JNIEXPORT jobject JNICALL Java_domain_engine_quantum_maps_NativeArrayMap__1keySet
  (JNIEnv *, jobject, jlong);

/*
 * Class:     domain_engine_quantum_maps_NativeArrayMap
 * Method:    _put
 * Signature: (JLdomain/engine/quantum/ClassicState;Ldomain/engine/math/Complex;)Ldomain/engine/math/Complex;
 */
JNIEXPORT jobject JNICALL Java_domain_engine_quantum_maps_NativeArrayMap__1put
  (JNIEnv *, jobject, jlong, jobject, jobject);

/*
 * Class:     domain_engine_quantum_maps_NativeArrayMap
 * Method:    _putAll
 * Signature: (JLjava/util/Map;)V
 */
JNIEXPORT void JNICALL Java_domain_engine_quantum_maps_NativeArrayMap__1putAll
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     domain_engine_quantum_maps_NativeArrayMap
 * Method:    _remove
 * Signature: (JLjava/lang/Object;)Ldomain/engine/math/Complex;
 */
JNIEXPORT jobject JNICALL Java_domain_engine_quantum_maps_NativeArrayMap__1remove
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     domain_engine_quantum_maps_NativeArrayMap
 * Method:    _size
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_domain_engine_quantum_maps_NativeArrayMap__1size
  (JNIEnv *, jobject, jlong);

/*
 * Class:     domain_engine_quantum_maps_NativeArrayMap
 * Method:    _values
 * Signature: (J)Ljava/util/Collection;
 */
JNIEXPORT jobject JNICALL Java_domain_engine_quantum_maps_NativeArrayMap__1values
  (JNIEnv *, jobject, jlong);

#ifdef __cplusplus
}
#endif
#endif
/* Header for class domain_engine_quantum_maps_NativeArrayMap_Entry */

#ifndef _Included_domain_engine_quantum_maps_NativeArrayMap_Entry
#define _Included_domain_engine_quantum_maps_NativeArrayMap_Entry
#ifdef __cplusplus
extern "C" {
#endif
#ifdef __cplusplus
}
#endif
#endif
